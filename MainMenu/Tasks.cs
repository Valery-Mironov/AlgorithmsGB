/* Антон Алиев
 * Алгоритмы, домашнее задание к уроку 4. 
 * 
 * Задание 1*
 * Количество маршрутов с препятствиями. Реализовать чтение массива с препятствием и нахождение количество маршрутов.
 * 
 * Задание 2
 * Решить задачу о нахождении длины максимальной подпоследовательности с помощью матрицы.
 * 
 * Задание 3***
 * Требуется обойти конём шахматную доску размером N × M, пройдя через все поля доски по одному разу.
 * Здесь алгоритм решения такой же, как и в задаче о 8 ферзях. Разница только в проверке положения коня.
 * 
 */

using System;

namespace Lesson_4
{
    /// <summary>
    /// Консольный пользовательский интерфейс
    /// </summary>
    public class Tasks
    {
        #region Messages
        static string msg1 = "Задание 1\nПопробовать оптимизировать пузырьковую сортировку.\n" +
            "Сравнить количество операций сравнения оптимизированной и неоптимизированной программы.\n" +
            "Написать функции сортировки, которые возвращают количество операций.";

        static string msg2 = "Задание 2*\nРаелизовать шейкерную сортировку";

        static string msg3 = "Задание 3\nРеализовать бинарный алгоритм поиска в виде функции, которой передаётся отсортированный массив.\n" +
            "Функция возвращает индекс найденного элемента или –1, если элемент не найден.";

        static string msg4 = "4. *Подсчитать количество операций для каждой из сортировок и сравнить его с асимптотической сложностью алгоритма.\n";
        #endregion
        string[] message;

        /// <summary>
        /// Конструктор
        /// </summary>
        /// <param name="numTests">количество тестов</param>
        /// <param name="testArrLength">длина массива</param>
        public Tasks(string[] msgs)
        {
            message = msgs;
        }

        /// <summary>
        /// Демонстрация решения задачи 1
        /// </summary>
        public void Task1()
        {

            ConsoleIO_Lib.ConsolIO.Greeting(message[0]);


            ConsoleIO_Lib.ConsolIO.PauseClear();
        }

        /// <summary>
        /// Демонстрация решения задачи 2
        /// </summary>
        public void Task2()
        {
            ConsoleIO_Lib.ConsolIO.Greeting(message[1]);


            ConsoleIO_Lib.ConsolIO.PauseClear();
        }

        /// <summary>
        /// Демонстрация решения задачи 3
        /// </summary>
        public void Task3()
        {
            ConsoleIO_Lib.ConsolIO.Greeting(message[2]);

            ConsoleIO_Lib.ConsolIO.PauseClear();
        }
    }
}
